# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
- stage: build
  displayName: 'Build the app'
  jobs:
  - job: build
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'build'
        configuration: 'Release'
    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: 'test'
        configuration: 'Release'
    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: 'publish'
        publishWebProjects: true
        zipAfterPublish: true
        modifyOutputPath: true
        arguments: '-o $(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
# - stage: deploy
#   displayName: 'Deploy to test'
#   jobs:
#   - job: deploy
#     steps:
#     - task: DownloadBuildArtifacts@1
#       inputs:
#         buildType: 'current'
#         downloadType: 'single'
#         artifactName: 'drop'
#         downloadPath: '$(Build.DefaultWorkingDirectory)'
#     - task: AzureWebApp@1
#       inputs:
        # azureSubscription: 'Pay-As-You-Go(df03f5e7-571e-4ef7-bba2-3e272468675f)'
        # appType: 'webAppLinux'
        # appName: 'DemoApp-alexw66'
        # deployToSlotOrASE: true
        # resourceGroupName: 'DemoApp-alexw66_group'
        # slotName: 'production'
        # package: '$(Build.DefaultWorkingDirectory)/**/*.zip'